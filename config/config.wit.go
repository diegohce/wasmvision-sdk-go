// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package config represents the imported interface "wasmvision:platform/config".
package config

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// ConfigError represents the enum "wasmvision:platform/config#config-error".
//
//	enum config-error {
//		no-such-key
//	}
type ConfigError uint8

const (
	// The requested key does not exist in the configuration.
	ConfigErrorNoSuchKey ConfigError = iota
)

var stringsConfigError = [1]string{
	"no-such-key",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ConfigError) String() string {
	return stringsConfigError[e]
}

// GetConfig represents the imported function "get-config".
//
//	get-config: func(key: string) -> result<string, config-error>
//
//go:nosplit
func GetConfig(key string) (result cm.Result[string, string, ConfigError]) {
	key0, key1 := cm.LowerString(key)
	wasmimport_GetConfig((*uint8)(key0), (uint32)(key1), &result)
	return
}

//go:wasmimport wasmvision:platform/config get-config
//go:noescape
func wasmimport_GetConfig(key0 *uint8, key1 uint32, result *cm.Result[string, string, ConfigError])
